######################
# Bash Configuration #
######################

# This file sets some options specific to "Bash".

# Quality Of Life #
###################

# Automatically change directory when entering just a path.
# i.e. Executing "/path/to/some/directory" is equivalent to "cd /path/to/some/directory".
shopt -s autocd

# Resize displayed content when the parent terminal emulator program is resized.
# This prevents weird graphical artifacts when resizing terminal emulators.
shopt -s checkwinsize

# History #
###########

# Enable reading and writing an unlimited number of lines to/from the history (in-memory).
HISTSIZE=

# Enable reading and writing an unlimited number of lines to/from the history file (on-disk).
HISTFILESIZE=

# Save the history to a custom file instead of the default "~/.bash_history".
# This is because some "Bash" sessions truncate this file on exit.
HISTFILE="${HOME}/.my_bash_history"

# The default value of "HISTCONTROL" is "ignoredups" which skips adding duplicate entries to the history.
# Do not exclude any entries from the history by resetting the value of this variable.
HISTCONTROL=

# By default, when a "Bash" session ends, the history file is cleared and the session's entries are saved to it.
# Disable this behaviour and only append to the file when the session ends.
shopt -s histappend

# When "PROMPT_COMMAND" is set, it is evaludated right before "PS1" (primary prompt displayed before each command).
# The following commands have been prepended to the "PROMPT_COMMAND".
# "history -a" - Append the last executed line to the history file (on-disk).
# "history -c" - Clear all history entries (in-memory).
# "history -r" - Read the history file and append its entries to the history (in-memorry).
# The above operations combined ensure that history will remain in-sync across multiple "Bash" sessions.
PROMPT_COMMAND="history -a; history -c; history -r; ${PROMPT_COMMAND}"

# Save all lines of a multi-line command in the same history entry.
shopt -s cmdhist

# Re-edit a history substitution line if it failed.
shopt -s histreedit

# Edit a recalled history line before executing.
shopt -s histverify

# Timestamp each entry in the history.
# Here's a sample of the format used "894  [Wed-20-Dec-2023-04-12-21-AM-+0530] ==> ls -Alh".
HISTTIMEFORMAT="[%a-%d-%b-%Y-%H-%M-%S-%Z] ==> "
